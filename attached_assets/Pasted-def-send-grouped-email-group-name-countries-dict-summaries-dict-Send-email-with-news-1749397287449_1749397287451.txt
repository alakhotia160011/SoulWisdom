def send_grouped_email(group_name, countries_dict, summaries_dict):
    """
    Send email with news summaries grouped by credit rating.
    
    Args:
        group_name (str): "Investment Grade" or "High Yield"
        countries_dict (dict): Dictionary mapping countries to their ratings
        summaries_dict (dict): Dictionary of summaries for each country
    """
    try:
        email_password = os.getenv('EMAIL_PASSWORD')
        if not email_password:
            raise ValueError("EMAIL_PASSWORD not found in environment variables")
            
        msg = MIMEMultipart()
        msg['From'] = EMAIL_CONFIG['EMAIL_ADDRESS']
        msg['To'] = EMAIL_CONFIG['EMAIL_ADDRESS']  # Set To as sender
        msg['Bcc'] = ", ".join(EMAIL_CONFIG['RECIPIENT_EMAILS'])  # Add recipients as BCC
        
        # Create rating-specific subject
        msg['Subject'] = f"LATAM {group_name} Countries News Summary - {datetime.now().strftime('%Y-%m-%d')}"
        
        # Create body with clear group identification
        body = f"""
Daily News Summary for LATAM {group_name} Countries
Generated on: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}

Countries covered in this report: {', '.join(f'{country} ({rating})' for country, rating in countries_dict.items())}

"""
        # Add each country's summaries
        for country in countries_dict.keys():
            if country in summaries_dict and summaries_dict[country]:
                body += f"\n{'='*50}\n"
                body += f"## {country} ({countries_dict[country]}) ##\n"
                body += f"{'='*50}\n\n"
                
                for summary_item in summaries_dict[country]:
                    body += f"Source: {summary_item['source']}\n"
                    body += f"{summary_item['summary']}\n"
                    body += f"{'-'*50}\n"
        
        # Add footer
        body += f"""
---
This is an automated summary for LATAM {group_name} countries.
Generated by News Scraper v1.0
"""
        
        msg.attach(MIMEText(body, 'plain'))

        server = smtplib.SMTP(EMAIL_CONFIG['EMAIL_HOST'], EMAIL_CONFIG['EMAIL_PORT'])
        server.starttls()
        server.login(EMAIL_CONFIG['EMAIL_ADDRESS'], email_password)
        server.send_message(msg)
        server.quit()
        
        print(f"Summary email for LATAM {group_name} sent successfully!")
        
    except Exception as e:
        print(f"Error sending {group_name} email: {e}")

# Define country groups

IG_COUNTRIES = {
    'Mexico': 'BBB',
    'Chile': 'A',
    'Brazil': 'BB',  # Including Brazil in IG group as requested
    'Panama': 'BBB',
}

HY_COUNTRIES = {
    'Ecuador': 'B',
    'El Salvador': 'B-',
    'Argentina': 'C',
    'Dominican Republic': 'BB-',
    'Colombia': 'BB+'  # Added Colombia to HY group
}

# Rest of the code remains the same...

# Initialize scraper
scraper = NewsScraper()

# Verify configuration
print("Checking configuration:")
print(f"Email config: {EMAIL_CONFIG}")
print(f"Password exists: {'Yes' if os.getenv('EMAIL_PASSWORD') else 'No'}")

# Get summaries for all countries
all_summaries = {}
for country in list(IG_COUNTRIES.keys()) + list(HY_COUNTRIES.keys()):
    try:
        print(f"\nProcessing {country}...")
        country_summaries = scraper.get_summaries(country)
        if country_summaries.get(country):
            all_summaries[country] = country_summaries[country]
        else:
            print(f"No summaries available for {country}")
    except Exception as e:
        print(f"Error processing {country}: {str(e)}")

# Send IG email
print("\nSending Investment Grade countries email...")
send_grouped_email("Investment Grade", IG_COUNTRIES, all_summaries)

# Wait between sends
time.sleep(2)

# Send HY email
print("\nSending High Yield countries email...")
send_grouped_email("High Yield", HY_COUNTRIES, all_summaries)